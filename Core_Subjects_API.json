{
    "status": "success",
    "data": {
    "Operating Systems": [
    {"question": "What is an operating system?", "answer": "System software managing hardware and software resources."},
    {"question": "Name the main functions of an operating system.", "answer": "Process management, memory management, file system, I/O management."},
    {"question": "What is the purpose of process scheduling?", "answer": "To determine the execution order of processes."},
    {"question": "What is a process in an operating system?", "answer": "A program in execution."},
    {"question": "What is the difference between process and thread?", "answer": "A process is independent; a thread is a lightweight subprocess."},
    {"question": "What is virtual memory?", "answer": "An abstraction allowing execution of processes larger than physical memory."},
    {"question": "What is paging?", "answer": "A memory management technique to eliminate contiguous allocation."},
    {"question": "What is fragmentation?", "answer": "Wasted memory space due to inefficient allocation."},
    {"question": "What is the difference between internal and external fragmentation?", "answer": "Internal occurs within allocated memory; external occurs outside."},
    {"question": "What is the function of a kernel?", "answer": "Manages system resources and hardware."},
    {"question": "Define multitasking in an operating system.", "answer": "The ability to execute multiple tasks simultaneously."},
    {"question": "What is a deadlock?", "answer": "A state where processes wait indefinitely for resources."},
    {"question": "What are semaphores?", "answer": "Synchronization tools to control access to resources."},
    {"question": "What are critical sections?", "answer": "Code segments where shared resources are accessed."},
    {"question": "What is mutual exclusion?", "answer": "Ensures only one process accesses a resource at a time."},
    {"question": "What is process synchronization?", "answer": "Coordination between processes to ensure consistency."},
    {"question": "What are the states of a process?", "answer": "New, ready, running, waiting, terminated."},
    {"question": "What is context switching?", "answer": "Saving and restoring process state during CPU switching."},
    {"question": "What is a system call?", "answer": "Interface for user programs to request OS services."},
    {"question": "What is preemptive scheduling?", "answer": "CPU allocation can be taken from a process."},
    {"question": "What is non-preemptive scheduling?", "answer": "CPU allocation cannot be taken until the process finishes."},
    {"question": "What is FCFS scheduling?", "answer": "First Come First Serve, processes executed in arrival order."},
    {"question": "What is round-robin scheduling?", "answer": "Processes are executed in time slices cyclically."},
    {"question": "What is priority scheduling?", "answer": "Processes executed based on priority."},
    {"question": "What is an interrupt?", "answer": "A signal for immediate attention from the OS."},
    {"question": "What is a device driver?", "answer": "Software that controls hardware devices."},
    {"question": "What is a file system?", "answer": "Organizes and manages files on storage."},
    {"question": "What is disk scheduling?", "answer": "Determines the order of I/O requests to the disk."},
    {"question": "What is the difference between LRU and FIFO?", "answer": "LRU removes least recently used; FIFO removes oldest."},
    {"question": "What is a bootloader?", "answer": "Loads the operating system during startup."},
    {"question": "What is spooling?", "answer": "Overlapping I/O operations with computation."},
    {"question": "What is a microkernel?", "answer": "Minimal OS design focusing on core functions."},
    {"question": "What is a monolithic kernel?", "answer": "OS design with all functions in one kernel."},
    {"question": "What is thrashing?", "answer": "Excessive paging reducing system performance."},
    {"question": "What is DMA?", "answer": "Direct Memory Access bypasses CPU for data transfer."},
    {"question": "What are real-time systems?", "answer": "Systems requiring strict timing constraints."},
    {"question": "What is a shell in operating systems?", "answer": "Interface for users to interact with the OS."},
    {"question": "What is load balancing?", "answer": "Distributes workload across resources evenly."},
    {"question": "What is the difference between soft and hard real-time systems?", "answer": "Soft allows flexibility; hard requires strict deadlines."},
    {"question": "What is dual-mode operation?", "answer": "OS operates in user and kernel modes."},
    {"question": "What is memory-mapped I/O?", "answer": "Maps device memory to main memory space."},
    {"question": "What is the difference between user mode and kernel mode?", "answer": "User mode has restricted access; kernel mode has full access to hardware."},
    {"question": "What are the types of operating systems?", "answer": "Batch OS, time-sharing OS, distributed OS, real-time OS."},
    {"question": "What is a soft interrupt?", "answer": "An interrupt initiated by a software instruction."},
    {"question": "What is a hard interrupt?", "answer": "An interrupt triggered by hardware."},
    {"question": "What is the role of the scheduler?", "answer": "Selects processes for execution."},
    {"question": "What is the principle of locality?", "answer": "Frequently accessed memory locations tend to be close together."},
    {"question": "What is a swap space?", "answer": "Disk space used to temporarily store inactive memory pages."},
    {"question": "What is RAID in OS?", "answer": "Redundant Array of Independent Disks, used for data redundancy."},
    {"question": "What is the difference between blocking and non-blocking I/O?", "answer": "Blocking waits for operation completion; non-blocking does not."},
    {"question": "What are zombie processes?", "answer": "Processes that have terminated but retain entries in the process table."},
    {"question": "What is the producer-consumer problem?", "answer": "A synchronization problem involving shared data buffers."},
    {"question": "What is the critical section problem?", "answer": "Ensuring mutual exclusion while multiple processes access shared resources."},
    {"question": "What are the conditions for deadlock?", "answer": "Mutual exclusion, hold and wait, no preemption, circular wait."},
    {"question": "What is the Bankerâ€™s Algorithm?", "answer": "A deadlock avoidance algorithm using resource allocation."},
    {"question": "What is a thread pool?", "answer": "A collection of pre-initialized threads for handling tasks."},
    {"question": "What is CPU-bound process?", "answer": "A process that spends more time on computation than I/O."},
    {"question": "What is I/O-bound process?", "answer": "A process that spends more time on I/O than computation."},
    {"question": "What is an orphan process?", "answer": "A child process whose parent has terminated."},
    {"question": "What is starvation in scheduling?", "answer": "A process waiting indefinitely due to resource unavailability."}
],
    "Computer Networks": [
    {"question": "What is a computer network?", "answer": "A group of interconnected devices sharing resources."},
    {"question": "What is the OSI model?", "answer": "A framework with 7 layers for communication standards."},
    {"question": "What are the layers of the OSI model?", "answer": "Physical, Data Link, Network, Transport, Session, Presentation, Application."},
    {"question": "What is the TCP/IP model?", "answer": "A 4-layer model for communication protocols."},
    {"question": "What is the difference between OSI and TCP/IP models?", "answer": "OSI has 7 layers; TCP/IP has 4 layers."},
    {"question": "What is a MAC address?", "answer": "A unique hardware address for network devices."},
    {"question": "What is an IP address?", "answer": "A unique identifier for devices on a network."},
    {"question": "What is the difference between IPv4 and IPv6?", "answer": "IPv4 is 32-bit; IPv6 is 128-bit."},
    {"question": "What is a subnet mask?", "answer": "Defines network and host portions of an IP address."},
    {"question": "What is ARP?", "answer": "Address Resolution Protocol maps IP to MAC addresses."},
    {"question": "What is DNS?", "answer": "Domain Name System resolves domain names to IP addresses."},
    {"question": "What is DHCP?", "answer": "Dynamic Host Configuration Protocol assigns IP addresses dynamically."},
    {"question": "What is HTTP?", "answer": "HyperText Transfer Protocol for web communication."},
    {"question": "What is HTTPS?", "answer": "HTTP Secure, adds encryption for secure communication."},
    {"question": "What is the function of a router?", "answer": "Connects networks and directs traffic between them."},
    {"question": "What is a switch in networking?", "answer": "Connects devices within a LAN and forwards data based on MAC addresses."},
    {"question": "What is the role of a gateway?", "answer": "Connects different network architectures or protocols."},
    {"question": "What is a firewall?", "answer": "A security system controlling network traffic."},
    {"question": "What is the difference between hub and switch?", "answer": "A hub broadcasts data; a switch sends data to specific devices."},
    {"question": "What is NAT?", "answer": "Network Address Translation allows private IPs to use a public IP."},
    {"question": "What is the purpose of port numbers?", "answer": "Identifies specific processes or services on a device."},
    {"question": "What is TCP?", "answer": "Transmission Control Protocol ensures reliable data transfer."},
    {"question": "What is UDP?", "answer": "User Datagram Protocol, faster but less reliable than TCP."},
    {"question": "What is the three-way handshake in TCP?", "answer": "A process for establishing a TCP connection."},
    {"question": "What is bandwidth?", "answer": "The maximum data transfer rate of a network."},
    {"question": "What is latency?", "answer": "The delay in data transmission over a network."},
    {"question": "What is a VPN?", "answer": "Virtual Private Network provides secure remote access."},
    {"question": "What is the difference between unicast and multicast?", "answer": "Unicast is one-to-one; multicast is one-to-many."},
    {"question": "What is a broadcast in networking?", "answer": "Sending data to all devices on a network."},
    {"question": "What is ICMP?", "answer": "Internet Control Message Protocol for error reporting."},
    {"question": "What is a proxy server?", "answer": "Acts as an intermediary for requests from clients to servers."},
    {"question": "What is SSL?", "answer": "Secure Sockets Layer for encrypted communication."},
    {"question": "What is an access point?", "answer": "A device that allows wireless devices to connect to a network."},
    {"question": "What is a collision domain?", "answer": "A network segment where data packets can collide."},
    {"question": "What is a broadcast domain?", "answer": "A network segment where broadcasts reach all devices."},
    {"question": "What is QoS?", "answer": "Quality of Service prioritizes traffic for better performance."},
    {"question": "What is load balancing?", "answer": "Distributes network traffic across multiple servers."},
    {"question": "What is packet switching?", "answer": "Data divided into packets for transmission over a network."},
    {"question": "What is circuit switching?", "answer": "A dedicated communication path established for data transfer."},
    {"question": "What is FTP?", "answer": "File Transfer Protocol for transferring files."},
    {"question": "What is the purpose of an HTTP cookie?", "answer": "Stores user session data for websites."},
    {"question": "What is a CDN?", "answer": "Content Delivery Network improves web content delivery speed."},
    {"question": "What is multiplexing?", "answer": "Combining multiple signals for transmission over one medium."},
    {"question": "What is a checksum in networking?", "answer": "A value used to verify data integrity."},
    {"question": "What is the function of a bridge?", "answer": "Connects and filters traffic between LAN segments."},
    {"question": "What is VLAN?", "answer": "Virtual LAN logically segments networks for better management."},
    {"question": "What is the difference between LAN and WAN?", "answer": "LAN is local; WAN covers large areas."},
    {"question": "What is the difference between static and dynamic routing?", "answer": "Static is manual; dynamic adapts using protocols."},
    {"question": "What are common routing protocols?", "answer": "OSPF, BGP, RIP, EIGRP."},
    {"question": "What is the difference between IPv4 header and IPv6 header?", "answer": "IPv6 header is simpler and supports larger addresses."},
    {"question": "What is a network topology?", "answer": "Arrangement of devices in a network."},
    {"question": "What is a peer-to-peer network?", "answer": "A network where devices share resources equally."},
    {"question": "What is client-server architecture?", "answer": "A model where clients request services from servers."},
    {"question": "What is a socket in networking?", "answer": "Endpoint for communication between devices."}
],
    "Database Management Systems": [
    {"question": "What is a database?", "answer": "A structured collection of data stored electronically."},
    {"question": "What is DBMS?", "answer": "Database Management System manages data and operations on it."},
    {"question": "What is a relational database?", "answer": "A database using tables to represent data and relationships."},
    {"question": "What is SQL?", "answer": "Structured Query Language for managing databases."},
    {"question": "What is the primary key?", "answer": "A unique identifier for rows in a table."},
    {"question": "What is a foreign key?", "answer": "A field in one table linking to the primary key of another."},
    {"question": "What is normalization?", "answer": "Organizing data to reduce redundancy and dependency."},
    {"question": "What is denormalization?", "answer": "Adding redundancy to improve query performance."},
    {"question": "What are the types of normalization?", "answer": "1NF, 2NF, 3NF, BCNF."},
    {"question": "What is a candidate key?", "answer": "A minimal set of attributes uniquely identifying tuples."},
    {"question": "What is a composite key?", "answer": "A key composed of multiple attributes."},
    {"question": "What is a surrogate key?", "answer": "A system-generated unique identifier for a row."},
    {"question": "What is an index in DBMS?", "answer": "A structure to improve the speed of data retrieval."},
    {"question": "What is a view?", "answer": "A virtual table based on a query."},
    {"question": "What is a transaction in DBMS?", "answer": "A sequence of operations treated as a single unit."},
    {"question": "What are ACID properties?", "answer": "Atomicity, Consistency, Isolation, Durability."},
    {"question": "What is a deadlock in DBMS?", "answer": "A state where transactions wait indefinitely for resources."},
    {"question": "What is a trigger?", "answer": "A procedure executed automatically in response to events."},
    {"question": "What is a stored procedure?", "answer": "A precompiled set of SQL statements stored in the database."},
    {"question": "What is a join in SQL?", "answer": "Combining rows from two or more tables based on a related column."},
    {"question": "What is an inner join?", "answer": "Returns rows with matching values in both tables."},
    {"question": "What is a left join?", "answer": "Returns all rows from the left table, and matching rows from the right."},
    {"question": "What is a right join?", "answer": "Returns all rows from the right table, and matching rows from the left."},
    {"question": "What is a full outer join?", "answer": "Returns rows when there is a match in either table."},
    {"question": "What is a self join?", "answer": "A table joined with itself."},
    {"question": "What is a cross join?", "answer": "Returns the Cartesian product of both tables."},
    {"question": "What is a subquery?", "answer": "A query nested inside another query."},
    {"question": "What is the difference between DELETE and TRUNCATE?", "answer": "DELETE removes rows with conditions; TRUNCATE removes all rows."},
    {"question": "What is the difference between DROP and DELETE?", "answer": "DROP deletes the table; DELETE removes rows."},
    {"question": "What is a schema in DBMS?", "answer": "The structure of the database defining tables, views, and indexes."},
    {"question": "What is a cursor?", "answer": "A pointer used for database traversal."},
    {"question": "What is the difference between WHERE and HAVING clauses?", "answer": "WHERE filters rows; HAVING filters groups."},
    {"question": "What is a clustered index?", "answer": "Stores data rows sorted by key values."},
    {"question": "What is a non-clustered index?", "answer": "An index with a separate structure for key values."},
    {"question": "What is a unique constraint?", "answer": "Ensures all values in a column are unique."},
    {"question": "What is a foreign key constraint?", "answer": "Enforces referential integrity between tables."},
    {"question": "What are aggregate functions?", "answer": "Functions performing calculations on a set of values, e.g., SUM, AVG."},
    {"question": "What is the difference between DDL and DML?", "answer": "DDL defines structure; DML manipulates data."},
    {"question": "What is a NoSQL database?", "answer": "Non-relational database for unstructured data."},
    {"question": "What is sharding?", "answer": "Dividing data into smaller, faster subsets."},
    {"question": "What is replication in DBMS?", "answer": "Creating copies of data for redundancy and availability."},
    {"question": "What is a primary index?", "answer": "An index created automatically on the primary key."},
    {"question": "What is the difference between union and union all?", "answer": "UNION removes duplicates; UNION ALL retains them."},
    {"question": "What is the difference between CHAR and VARCHAR?", "answer": "CHAR is fixed length; VARCHAR is variable length."},
    {"question": "What is an ER diagram?", "answer": "Entity-Relationship diagram visualizes database structure."},
    {"question": "What is a weak entity?", "answer": "An entity dependent on another entity for its existence."},
    {"question": "What is a relationship in ER diagrams?", "answer": "An association between entities."},
    {"question": "What is a transaction log?", "answer": "Records all transactions for recovery purposes."},
    {"question": "What is a functional dependency?", "answer": "A relationship where one attribute uniquely determines another."},
    {"question": "What is BCNF?", "answer": "Boyce-Codd Normal Form removes all anomalies in 3NF."},
    {"question": "What is data integrity?", "answer": "Maintaining accuracy and consistency of data."},
    {"question": "What is the difference between UNION and JOIN?", "answer": "UNION combines results; JOIN combines tables."},
    {"question": "What is data abstraction?", "answer": "Hiding complexity by defining levels of abstraction: physical, logical, and view."},
    {"question": "What is a star schema?", "answer": "A schema with a central fact table connected to dimension tables."},
    {"question": "What is a snowflake schema?", "answer": "An extension of star schema with normalized dimension tables."}
],
    "Object-Oriented Programming Systems (OOPS)": [
    {"question": "What is OOP?", "answer": "Object-Oriented Programming organizes code using objects and classes."},
    {"question": "What is a class in OOP?", "answer": "A blueprint for creating objects."},
    {"question": "What is an object in OOP?", "answer": "An instance of a class containing data and methods."},
    {"question": "What are the four pillars of OOP?", "answer": "Encapsulation, Abstraction, Inheritance, Polymorphism."},
    {"question": "What is encapsulation?", "answer": "Hiding data and providing access through methods."},
    {"question": "What is abstraction?", "answer": "Hiding implementation details and showing only functionality."},
    {"question": "What is inheritance?", "answer": "A mechanism to derive a class from another."},
    {"question": "What is polymorphism?", "answer": "Ability to take many forms, e.g., method overloading and overriding."},
    {"question": "What is the difference between overloading and overriding?", "answer": "Overloading is static; overriding is dynamic."},
    {"question": "What is a constructor?", "answer": "A special method to initialize objects."},
    {"question": "What is a destructor?", "answer": "A special method to release resources before an object is destroyed."},
    {"question": "What is an interface?", "answer": "A contract defining methods without implementations."},
    {"question": "What is an abstract class?", "answer": "A class with abstract methods, meant for inheritance."},
    {"question": "What is multiple inheritance?", "answer": "A class inheriting from more than one class."},
    {"question": "What is a virtual function?", "answer": "A function overridden in a derived class."},
    {"question": "What is a pure virtual function?", "answer": "A virtual function with no implementation in the base class."},
    {"question": "What is method overriding?", "answer": "A derived class provides a specific implementation of a base class method."},
    {"question": "What is method overloading?", "answer": "Defining multiple methods with the same name but different parameters."},
    {"question": "What is the 'this' keyword?", "answer": "Refers to the current object."},
    {"question": "What is static in OOP?", "answer": "A keyword to define members shared by all objects."},
    {"question": "What is a friend function?", "answer": "A function with access to private members of a class."},
    {"question": "What is the difference between public, private, and protected?", "answer": "Access specifiers defining visibility of members."},
    {"question": "What is dynamic binding?", "answer": "Method implementation determined at runtime."},
    {"question": "What is static binding?", "answer": "Method implementation determined at compile-time."},
    {"question": "What is operator overloading?", "answer": "Defining new meanings for operators for user-defined types."},
    {"question": "What is a singleton class?", "answer": "A class that allows only one instance."},
    {"question": "What is the difference between aggregation and composition?", "answer": "Aggregation is weak; composition is strong ownership."},
    {"question": "What is a copy constructor?", "answer": "A constructor that initializes an object from another."},
    {"question": "What is the purpose of a virtual destructor?", "answer": "Ensures proper cleanup in inheritance hierarchies."},
    {"question": "What is an abstract method?", "answer": "A method without a body, defined in abstract classes."},
    {"question": "What is the diamond problem in OOP?", "answer": "Ambiguity caused by multiple inheritance."},
    {"question": "What is the solution to the diamond problem?", "answer": "Using virtual inheritance."},
    {"question": "What is a template in OOP?", "answer": "Defines generic classes or functions."},
    {"question": "What is a namespace?", "answer": "A container for identifiers to avoid name conflicts."},
    {"question": "What is a final class?", "answer": "A class that cannot be inherited."},
    {"question": "What is shallow copy?", "answer": "Copies the object's reference, not the data."},
    {"question": "What is deep copy?", "answer": "Copies the object's data along with its references."},
    {"question": "What is RTTI?", "answer": "Run-Time Type Information identifies object types during runtime."},
    {"question": "What is the difference between polymorphism and inheritance?", "answer": "Inheritance defines relationships; polymorphism enables dynamic behavior."},
    {"question": "What is a delegate in OOP?", "answer": "A type that encapsulates methods, often used in events."},
    {"question": "What is a lambda function?", "answer": "An anonymous function defined inline."},
    {"question": "What is exception handling?", "answer": "Mechanism to handle runtime errors."},
    {"question": "What is the difference between throw and throws?", "answer": "Throw raises an exception; throws declares it."},
    {"question": "What is a mixin?", "answer": "A class providing methods for other classes without inheritance."},
    {"question": "What is composition in OOP?", "answer": "Building complex objects from simpler ones."},
    {"question": "What is an iterator?", "answer": "An object enabling traversal through a container."},
    {"question": "What is the difference between new and malloc?", "answer": "New initializes objects; malloc allocates memory."},
    {"question": "What is a virtual table?", "answer": "A table used for dynamic dispatch in polymorphism."},
    {"question": "What is the difference between abstract and interface?", "answer": "Abstract allows partial implementation; interface is fully abstract."},
    {"question": "What is the difference between static and dynamic polymorphism?", "answer": "Static is compile-time; dynamic is runtime."},
    {"question": "What is a sealed class?", "answer": "Prevents further inheritance of the class."},
    {"question": "What is dependency injection?", "answer": "A technique to achieve loose coupling between components."},
    {"question": "What is cohesion in OOP?", "answer": "Degree to which a class focuses on a single purpose."},
    {"question": "What is coupling in OOP?", "answer": "The degree of interdependence between components."},
    {"question": "What is an adapter pattern?", "answer": "A design pattern that bridges two incompatible interfaces."},
    {"question": "What is a factory method?", "answer": "A method to create objects without specifying the class type."}
]
}}